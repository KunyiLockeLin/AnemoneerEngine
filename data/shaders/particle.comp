#version 450

layout( local_size_x = 1024) in;

layout( binding = 30, rgba32f  ) uniform imageBuffer inputStorageTexelBuffer;
layout( binding = 31, rgba32f  ) uniform imageBuffer outputStorageTexelBuffer;
//layout( binding = 40 ) uniform imageBuffer StorageTexelBuffer;
//layout( binding = 41 ) uniform imageBuffer StorageTexelBuffer;

layout( push_constant ) uniform TimeState {
  float DeltaTime;
} PushConstant;

void main() {
 // if( gl_GlobalInvocationID.x < PARTICLES_COUNT ) {
	
	vec4 pos = imageLoad( inputStorageTexelBuffer, int(gl_GlobalInvocationID.x * 7) );
	// speed = normal
    vec4 speed = imageLoad( inputStorageTexelBuffer, int(gl_GlobalInvocationID.x * 7+3) ); 
	
	// force = tangent
    vec4 force = imageLoad( inputStorageTexelBuffer, int(gl_GlobalInvocationID.x * 7+4) ); 

	if(speed.w>0){ // life time
		pos.xyz += speed.xyz*PushConstant.DeltaTime;
		speed.w -= PushConstant.DeltaTime;
		speed.xyz += (force.xyz**PushConstant.DeltaTime);
	}
	else if(force.w>0){ // reborn
		// init_pos = texCoord
		pos = imageLoad( inputStorageTexelBuffer, int(gl_GlobalInvocationID.x * 7+2) );
		// init_speed & life time = joint
		speed = imageLoad( inputStorageTexelBuffer, int(gl_GlobalInvocationID.x * 7+5) ); 		
	}
    imageStore( outputStorageTexelBuffer, int(gl_GlobalInvocationID.x  * 7), pos );
	imageStore( outputStorageTexelBuffer, int(gl_GlobalInvocationID.x  * 7+3), speed );
//  }
}